import re
class Operation:
    def __init__(self):
        ...
    def ReadContacts(self):
        self.Text=FilesOperation()
        self.Text.ReadMode()
        for i in self.Text.TextFile:
            print (i.replace('\n',''))

    def AddContacts(self):
        self.Text=FilesOperation()
        self.Text.AddMode()
        NewUsers=input("NewUserName= ")
        NewNumbers=input('NewNumber= ')
        NewContact ='\n'+NewUsers+';'+NewNumbers
        self.Text.SaveFile(NewContact)
        

    def DeleteContacts(self):
        self.Text=FilesOperation()
        self.Text.ReadMode()
        SerchText=input('Введите имя или нормер: ')
        PatternSerchName=re.compile(SerchText+';')
        PatternSerchNumber=re.compile(';'+SerchText)
        ContactList=[]
        for i in self.Text.TextFile:
            i.replace('\n','')
            if re.search(PatternSerchName,i) != None or re.search(PatternSerchNumber,i)!=None:
                continue
            else: 
                ContactList.append(i)
        print(ContactList)
        self.Text.DeleteMode()
        self.Text.SaveFile(ContactList)

class FilesOperation:
    def __init__(self):
        ...
    def ReadMode(self):
        self.TextFile= open (r'E:\Python\Тренировка\Список конт.txt')
    def AddMode(self):
        self.TextFile= open (r'E:\Python\Тренировка\Список конт.txt','a')
    def DeleteMode(self):
        self.TextFile=open (r'E:\Python\Тренировка\Список конт.txt','w')
    def SaveFile(self,NewFile):
        self.TextFile.writelines(NewFile)
        self.TextFile.close()
 
class Interactive():
    def __init__(self) -> None:
        pass
    def SelectMode(self):
        print('\nРежим работы: \n 1 RO \n 2 Add \n 3 Del')
        Mode=input('input mode:=')
        while re.search('[1-3]',Mode) == None:
            print ("ErrorInput")
            Mode=input('input mode:=')
        self.WorkMode(int(Mode))
        
    def WorkMode(self,Mode):
        if Mode ==1:
            Contacts=Operation()
            Contacts.ReadContacts()
        if Mode == 2:
            Contacts=Operation()
            Contacts.AddContacts()
        if Mode==3:
            Contacts=Operation()
            Contacts.DeleteContacts()
        self.NewOperation()

    def NewOperation(self):
            print('Нужны еще операции? Y or N')
            Command=input('=>:')
            if Command == 'Y' or Command=='y':
                self.SelectMode()

#start

InteractiveMenu=Interactive()
InteractiveMenu.SelectMode()
print('Работа завершена')
